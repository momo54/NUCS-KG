AI-Introduction: Fundamental Issues
AI-Search: Search
AI-KRR: Fundamental Knowledge Representation and Reasoning
AI-ML: Machine Learning
AI-SEP: Applications and Societal Impact
AI-LRR: Logical Representation and Reasoning
AI-Probability: Probabilistic Representation and Reasoning
AI-Planning: Planning
AI-Agents: Agents and Cognitive Systems
AI-NLP: Natural Language Processing
AI-Robotics: Robotics
AI-Vision: Perception and Computer Vision
AL-Foundational: Foundational Data Structures and Algorithms
AL-Strategies: Algorithmic Strategies
AL-Complexity: Complexity
AL-Models: Computational Models and Formal Languages
AL-SEP: Society, Ethics, and the Profession
AR-Logic: Digital Logic and Digital Systems
AR-Representation: Machine-Level Data Representation
AR-Assembly: Assembly Level Machine Organization
AR-Memory: Memory Hierarchy
AR-IO: Interfacing and Communication
AR-Organization: Functional Organization
AR-Performance-Energy: Performance and Energy Efficiency
AR-Heterogeneity: Heterogeneous Architectures
AR-Security: Secure Processor Architectures
AR-Quantum: Quantum Architectures
AR-SEP: Sustainability Issues
DM-Data: The Role of Data and the Data Life Cycle
DM-Core: Core Database System Concepts
DM-Modeling: Data Modeling
DM-Relational: Relational Databases
DM-Querying: Query Construction
DM-Processing: Query Processing
DM-Internals: DBMS Internals
DM-NoSQL: NoSQL Systems
DM-Security: Data Security and Privacy
DM-Analytics: Data Analytics
DM-Distributed: Distributed Databases/Cloud Computing
DM-Unstructured: Semi-structured and Unstructured Databases
DM-SEP: Society, Ethics, and the Profession
FPL-OOP: Object-Oriented Programming
FPL-Functional: Functional Programming
FPL-Logic: Logic Programming
FPL-Scripting: Shell Scripting
FPL-Event-Driven: Event-Driven and Reactive Programming
FPL-Parallel: Parallel and Distributed Computing
FPL-Aspect: Aspect-Oriented Programming
FPL-Types: Type Systems
FPL-Systems: Systems Execution and Memory Model
FPL-Translation: Language Translation and Execution
FPL-Abstraction: Program Abstraction and Representation
FPL-Syntax: Syntax Analysis
FPL-Semantics: Compiler Semantic Analysis
FPL-Analysis: Program Analysis and Analyzers
FPL-Code: Code Generation
FPL-Run-Time: Run-time Behavior and Systems
FPL-Constructs: Advanced Programming Constructs
FPL-Pragmatics: Language Pragmatics
FPL-Formalism: Formal Semantics
FPL-Methodologies: Formal Development Methodologies
FPL-Design: Design Principles of Programming Languages
FPL-SEP: Society, Ethics, and the Profession
GIT-Fundamentals: Fundamental Concepts
GIT-Visualization: Visualization
GIT-Rendering: Applied Rendering and Techniques
GIT-Modeling: Geometric Modeling
GIT-Shading: Shading and Advanced Rendering
GIT-Animation: Computer Animation
GIT-Simulation: Simulation
GIT-Immersion: Immersion
GIT-Interaction: Interaction
GIT-Image: Image Processing
GIT-Physical: Tangible/Physical Computing
GIT-SEP: Society, Ethics, and the Profession
HCI-User: Understanding the User: Individual goals and interactions with others
HCI-Accountability: Accountability and Responsibility in Design
HCI-Accessibility: Accessibility and Inclusive Design
HCI-Evaluation: Evaluating the Design
HCI-Design: System Design
HCI-SEP: Society, Ethics, and the Profession
MSF-Discrete: Discrete Mathematics
MSF-Probability: Probability
MSF-Statistics: Statistics
MSF-Linear: Linear Algebra
MSF-Calculus
NC-Fundamentals: Fundamentals
NC-Applications: Networked Applications
NC-Reliability: Reliability Support
NC-Routing: Routing and Forwarding
NC-SingleHop: Single Hop Communication
NC-Security: Network Security
NC-Mobility: Mobility
NC-Emerging: Emerging Topics
OS-Purpose: Role and Purpose of Operating Systems
OS-Principles: Principles of Operating System
OS-Concurrency: Concurrency
OS-Protection: Protection and Safety
OS-Scheduling: Scheduling
OS-Process: Process Model
OS-Memory: Memory Management
OS-Devices: Device management
OS-Files: File Systems API and Implementation
OS-Advanced-Files: Advanced File systems
OS-Virtualization: Virtualization
OS-Real-time: Real-time and Embedded Systems
OS-Faults: Fault tolerance
OS-SEP: Society, Ethics, and the Profession
PDC-Programs: Programs
PDC-Communication: Communication
PDC-Coordination: Coordination
PDC-Evaluation: Evaluation
PDC-Algorithms: Algorithms
SDF-Fundamentals: Fundamental Programming Concepts and Practices
SDF-Data-Structures: Fundamental Data Structures
SDF-Algorithms: Algorithms
SDF-Practices: Software Development Practices
SDF-SEP: Society, Ethics, and the Profession
SE-Teamwork: Teamwork
SE-Tools: Tools and Environments
SE-Requirements: Product Requirements
SE-Design: Software Design
SE-Construction: Software Construction
SE-Validation: Software Verification and Validation
SE-Refactoring: Refactoring and Code Evolution
SE-Reliability: Software Reliability
SE-Formal: Formal Methods
SEC-Foundations: Foundational Security
SEC-SEP: Society, Ethics, and the Profession
SEC-Coding: Secure Coding
SEC-Crypto: Cryptography
SEC-Engineering: Security Analysis, Design, and Engineering
SEC-Forensics: Digital Forensics
SEC-Governance: Security Governance
SEP-Context: Social Context
SEP-Ethical-Analysis: Methods for Ethical Analysis
SEP-Professional-Ethics: Professional Ethics
SEP-IP: Intellectual Property
SEP-Privacy: Privacy and Civil Liberties
SEP-Communication: Communication
SEP-Sustainability: Sustainability
SEP-History: Computing History
SEP-Economies: Economies of Computing
SEP-Security: Security Policies, Laws and Computer Crimes
SEP-DEIA: Diversity, Equity, Inclusion, and Accessibility
SF-Overview: Overview of Computer Systems
SF-Foundations: Basic Concepts
SF-Resource: Resource Management
SF-Performance: System Performance
SF-Evaluation: Performance Evaluation
SF-Reliability: System Reliability
SF-Security: System Security
SF-Design: System Design
SF-SEP: Society, Ethics, and the Profession
SPD-Common: Common Aspects/Shared Concerns
SPD-Web: Web Platforms
SPD-Mobile: Mobile Platforms
SPD-Robot: Robot Platforms
SPD-Embedded: Embedded Platforms
SPD-Game: Game Platforms
SPD-Interactive: Interactive Computing Platforms
SPD-SEP/Web
